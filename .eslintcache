[{"/Users/christopherswinton/Sites/ucas-calculator/src/index.js":"1","/Users/christopherswinton/Sites/ucas-calculator/src/App.js":"2","/Users/christopherswinton/Sites/ucas-calculator/src/reportWebVitals.js":"3","/Users/christopherswinton/Sites/ucas-calculator/src/Components/UCAS-Calculator.js":"4"},{"size":500,"mtime":1611665921248,"results":"5","hashOfConfig":"6"},{"size":995,"mtime":1611667165498,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611665921248,"results":"8","hashOfConfig":"6"},{"size":7653,"mtime":1611666012932,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iolzf1",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"/Users/christopherswinton/Sites/ucas-calculator/src/index.js",[],"/Users/christopherswinton/Sites/ucas-calculator/src/App.js",[],"/Users/christopherswinton/Sites/ucas-calculator/src/reportWebVitals.js",[],"/Users/christopherswinton/Sites/ucas-calculator/src/Components/UCAS-Calculator.js",["20","21","22","23"],"import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst GradeUrl = \"https://www.ucas.com/api/tariff/v1/view/\";\nconst CourseUrl = \"https://www.ucas.com/api/tariff/v1/list/\";\nvar gradeclass = \"\";\n\nexport default class NewCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: [{}],\n      courseid: \"\",\n      value: \"\",\n      courselist: [],\n      gradelist: [],\n      loading: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleAddRow = () => {\n    var gradeField = document.getElementById(\"GradesSelection\");\n    var courseField = document.getElementById(\"CourseSelection\");\n    var mygrade = gradeField.options[gradeField.selectedIndex].text;\n    var mycourse = courseField.options[courseField.selectedIndex].text;\n    var x = document.getElementById(\"PointsID\").innerHTML;\n    var y = document.getElementById(\"GradesSelection\").value;\n    var z = Number(x) + Number(y);\n\n    document.getElementById(\"PointsID\").innerHTML = z;\n    const item = {\n      name: mycourse,\n      grade: mygrade,\n      points: gradeField.value,\n    };\n    this.setState({\n      rows: [...this.state.rows, item],\n    });\n  };\n  handleRemoveRow = () => {\n    const rows = [...this.state.rows];\n    var y = rows[rows.length - 1].points;\n    var x = document.getElementById(\"PointsID\").innerHTML;\n    var z = Number(x) - Number(y);\n\n    document.getElementById(\"PointsID\").innerHTML = z;\n    this.setState({\n      rows: this.state.rows.slice(0, -1),\n    });\n  };\n  handleRemoveSpecificRow = (idx) => () => {\n    const rows = [...this.state.rows];\n    var y = rows[idx].points;\n    rows.splice(idx, 1);\n    this.setState({ rows });\n    var x = document.getElementById(\"PointsID\").innerHTML;\n\n    var z = Number(x) - Number(y);\n    document.getElementById(\"PointsID\").innerHTML = z;\n  };\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  onChange = ({ target: { value } }) => {\n    var inputval = value;\n    this.setState({ dataValue: inputval });\n    var node = document.createElement(\"LI\");\n    var textnode = document.createTextNode([value]);\n    [gradeclass] = [value];\n    this.setState({ courseid: value });\n    this.getCourseGrades();\n  };\n  async getCourseGrades() {\n    const grade_url = [GradeUrl] + [gradeclass];\n    const grade_response = await fetch(grade_url);\n    const grade_data = await grade_response.json();\n    var grade_result = [];\n    for (var i in grade_data) grade_result.push([i, grade_data[i]]);\n    this.setState({ gradelist: grade_result, loading: false });\n  }\n\n  async componentDidMount() {\n    const courses_url = [CourseUrl];\n    const courses_response = await fetch(courses_url);\n    const courses_data = await courses_response.json();\n    var courses_result = [];\n    for (var i in courses_data) courses_result.push([i, courses_data[i]]);\n    this.setState({ courselist: courses_result, loading: false });\n  }\n\n  render() {\n    const { dataValue } = this.state;\n    const { courselist } = this.state.courseid;\n    return (\n      <Container id=\"mainElement\">\n        <QualficationContainer>\n          <Select id=\"CourseSelection\" onChange={this.onChange}>\n            <Option value=\"0\">Select a Qualfication</Option>\n            {this.state.courselist.map((i) => (\n              <Option key={i[0]} value={i[0]} id={i[1]}>\n                {i[1]}\n              </Option>\n            ))}\n          </Select>\n          <Select id=\"GradesSelection\" onChange={this.handleChange}>\n            <Option value=\"0\">Select an grade</Option>\n            {this.state.gradelist.map((i) => (\n              <Option key={i[0]} value={i[1]} id={i[1]}>\n                {i[0]}\n              </Option>\n            ))}\n          </Select>\n        </QualficationContainer>\n        <AddQualfication onClick={this.handleAddRow}>\n          Add Qualfication\n        </AddQualfication>\n        <hr />\n        <PointsTable>\n          <PointsHeader>\n            <PointsRow>\n              <PointsHead>#</PointsHead>\n              <PointsHead>Course</PointsHead>\n              <PointsHead>Grade</PointsHead>\n              <PointsHead>UCAS Points</PointsHead>\n              <PointsHead />\n            </PointsRow>\n          </PointsHeader>\n          <PointsBody>\n            {this.state.rows.map((item, idx) => (\n              <QualficationRow key={idx}>\n                <PointsDetails>{idx}</PointsDetails>\n                <PointsDetails name=\"name\">\n                  {this.state.rows[idx].name}\n                </PointsDetails>\n                <PointsDetails name=\"grade\">\n                  {this.state.rows[idx].grade}\n                </PointsDetails>\n                <PointsDetails name=\"points\">\n                  {this.state.rows[idx].points}\n                </PointsDetails>\n                <PointsDetails>\n                  <DeleteQualfication\n                    onClick={this.handleRemoveSpecificRow(idx)}\n                  >\n                    Remove\n                  </DeleteQualfication>\n                </PointsDetails>\n              </QualficationRow>\n            ))}\n          </PointsBody>\n        </PointsTable>\n        <DeleteLastQualfication onClick={this.handleRemoveRow}>\n          Delete Last Qualfication\n        </DeleteLastQualfication>\n        <hr />\n        <PointsText>Your UCAS Points Total: </PointsText>\n        <PointsTotal id=\"PointsID\">0</PointsTotal>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  max-width: 600px;\n  width: 100%;\n`;\n\nconst QualficationContainer = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  width: 100%;\n  max-width: 800px;\n`;\n\nconst AddQualfication = styled.button`\n  background: #e00223;\n  height: 40px;\n  width: 100%;\n  border: 3px solid;\n  border-color: #f10427;\n  color: #fff;\n  border-radius: 40px;\n  padding: 6px 12px;\n  font-weight: bold;\n  transition: 0.8s;\n  font-size: 14px;\n  margin: 8px 0px;\n\n  :hover {\n    box-shadow: 4px 4px #e00223;\n  }\n`;\nconst DeleteQualfication = styled.button`\n  width: 100%;\n  height: 40px;\n  background: #e00223;\n  border: 3px solid;\n  border-color: #f10427;\n  color: #fff;\n  border-radius: 40px;\n  padding: 6px 12px;\n  font-weight: bold;\n  transition: 0.8s;\n  font-size: 14px;\n\n  :hover {\n    box-shadow: 4px 4px #e00223;\n  }\n`;\nconst DeleteLastQualfication = styled.button`\n  width: 100%;\n  height: 40px;\n  margin-top: 8px;\n  background: #e00223;\n  border: 3px solid;\n  border-color: #f10427;\n  color: #fff;\n  border-radius: 40px;\n  padding: 6px 12px;\n  font-weight: bold;\n  transition: 0.8s;\n  font-size: 14px;\n\n  :hover {\n    box-shadow: 4px 4px #e00223;\n  }\n`;\nconst PointsText = styled.span`\n  font-weight: 600;\n`;\nconst PointsTotal = styled.strong``;\n\nconst Select = styled.select`\n  background: #fff;\n  height: 40px;\n  max-width: 400px;\n  border: 3px solid;\n  border-color: #f10427;\n  color: #333;\n  border-radius: 40px;\n  padding: 6px 12px;\n  font-weight: bold;\n  transition: 0.6s;\n  font-size: 14px;\n  margin-right: 8px;\n\n  :hover {\n    box-shadow: 4px 4px #e00223;\n    margin-bottom: 4px;\n  }\n  :active {\n    box-shadow: 4px 4px #e00223;\n    margin-bottom: 4px;\n  }\n  :focus {\n    box-shadow: 4px 4px #e00223;\n    margin-bottom: 4px;\n  }\n`;\nconst Option = styled.option``;\nconst PointsTable = styled.table`\n  width: 100%;\n  margin: 8px;\n  text-align: left;\n`;\nconst PointsRow = styled.tr``;\nconst QualficationRow = styled.tr`\n  font-weight: bold;\n  :nth-child(1) {\n    display: none;\n  }\n`;\nconst PointsHeader = styled.thead``;\nconst PointsHead = styled.th`\n  text-align: center;\n`;\nconst PointsBody = styled.tbody`\n  width: 100%;\n`;\nconst PointsDetails = styled.td`\n  text-align: center;\n`;",["24","25"],{"ruleId":"26","severity":1,"message":"27","line":69,"column":9,"nodeType":"28","messageId":"29","endLine":69,"endColumn":13},{"ruleId":"26","severity":1,"message":"30","line":70,"column":9,"nodeType":"28","messageId":"29","endLine":70,"endColumn":17},{"ruleId":"26","severity":1,"message":"31","line":94,"column":13,"nodeType":"28","messageId":"29","endLine":94,"endColumn":22},{"ruleId":"26","severity":1,"message":"32","line":95,"column":13,"nodeType":"28","messageId":"29","endLine":95,"endColumn":23},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},"no-unused-vars","'node' is assigned a value but never used.","Identifier","unusedVar","'textnode' is assigned a value but never used.","'dataValue' is assigned a value but never used.","'courselist' is assigned a value but never used.","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-global-assign","no-unsafe-negation"]